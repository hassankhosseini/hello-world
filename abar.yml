apiVersion: v1
kind: Template
labels:
  template: "hello-world"

parameters:
- displayName: Name
  name: NAME
  required: true
  value: hello-world
- displayName: Imagestream Namespace
  description:
  name: IMAGESTREAM_NAMESPACE
  required: true
  value: myorg-build
- displayName: Imagestream Name
  name: IMAGESTREAM_NAME
  required: true
- displayName: Imagestream Tag
  name: IMAGESTREAM_TAG
  required: true
  value: latest
- displayName: Port
  name: PORT
  required: true
  value: "8080"
  # You shouldn't need to change the ROUTE_PREFIX as the Jenkinsfile sets its value.
- name: ROUTE_PREFIX
  displayName: Auto-generated route prefix for .abar.cloud
  description: Must be unique across all projects, and contain only lower-case letters, numbers and dashes.
  required: true
  # You shouldn't need to change the APP_GIT_ADDRESS as the Jenkinsfile sets its value.
  # To use ssh URLs you need to uncomment the sourceSecret in "BuildConfig > spec > source" below.
- name: APP_GIT_ADDRESS
  displayName: Git Address
  required: false

objects:

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        containers:
          - name: app
            image: ${NAME}:latest
            imagePullPolicy: Always
            ports:
            - containerPort: ${PORT}
            terminationMessagePath: /dev/termination-log
        restartPolicy: Always
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: false
        containerNames:
        - app
        from:
          kind: ImageStreamTag
          name: ${IMAGESTREAM_NAME}:${IMAGESTREAM_TAG}
          namespace: ${IMAGESTREAM_NAMESPACE}
      type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    ports:
    - name: "${PORT}-tcp"
      port: "${PORT}"
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    host: ${ROUTE_PREFIX}.abar.cloud
    port:
      targetPort: "${PORT}-tcp"
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    to:
      kind: Service
      name: ${NAME}
      weight: 100
    wildcardPolicy: None

- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    postCommit:
      script: bundle exec rspec spec
    output:
      to:
        kind: ImageStreamTag
        name: ${IMAGESTREAM_NAME}:${IMAGESTREAM_TAG}
    runPolicy: Serial
    source:
      git:
        uri: ${APP_GIT_ADDRESS}
      type: Git
      # Uncomment the following config if the Dockerfile is in a sub-directory in the git repository
      #contextDir: my-app

      # Uncomment the following config when fetching a private repository.
      #
      # The name of the secret that contains your private SSH Key. If you haven't
      # added it AbarCloud, goto Resources > Secrets from the main menu then click on Create Secret.
      # Select 'Source Secret' for Secret Type, give the key a name, 'SSH Key' for Authentication Type,
      # upload your key and tick the 'Link secret to a service account' option, and select
      # 'builder'. Put the key name here.
      #
      #sourceSecret:
      #  name: SOURCE_SECRET_NAME_HERE
    strategy:
      type: Docker
